import type { Dictionary } from '../typings';
export declare function Index<T>(options?: IndexOptions<T>): (target: Partial<any>, propertyName?: string | undefined) => any;
export declare function Unique<T>(options?: UniqueOptions<T>): (target: Partial<any>, propertyName?: string | undefined) => any;
export interface UniqueOptions<T> {
    name?: string;
    properties?: keyof T | (keyof T)[];
    options?: Dictionary;
}
export interface IndexOptions<T> extends UniqueOptions<T> {
    type?: string;
    expression?: string;
}
