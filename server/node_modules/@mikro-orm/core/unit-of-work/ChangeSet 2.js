"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChangeSetType = exports.ChangeSet = void 0;
const wrap_1 = require("../entity/wrap");
class ChangeSet {
    constructor(entity, type, payload, meta) {
        this.entity = entity;
        this.type = type;
        this.payload = payload;
        this.meta = meta;
        this.name = meta.className;
        this.rootName = meta.root.className;
        this.collection = meta.root.collection;
        this.schema = (0, wrap_1.helper)(entity).__schema ?? meta.root.schema;
    }
    getPrimaryKey(object = false) {
        if (!this.originalEntity) {
            this.primaryKey ?? (this.primaryKey = (0, wrap_1.helper)(this.entity).getPrimaryKey(true));
        }
        else if (this.meta.compositePK || object) {
            this.primaryKey = this.meta.primaryKeys.reduce((o, pk) => {
                o[pk] = this.originalEntity[pk];
                return o;
            }, {});
        }
        else {
            this.primaryKey = this.originalEntity[this.meta.primaryKeys[0]];
        }
        return this.primaryKey ?? null;
    }
    getSerializedPrimaryKey() {
        this.serializedPrimaryKey ?? (this.serializedPrimaryKey = (0, wrap_1.helper)(this.entity).getSerializedPrimaryKey());
        return this.serializedPrimaryKey;
    }
}
exports.ChangeSet = ChangeSet;
var ChangeSetType;
(function (ChangeSetType) {
    ChangeSetType["CREATE"] = "create";
    ChangeSetType["UPDATE"] = "update";
    ChangeSetType["DELETE"] = "delete";
    ChangeSetType["DELETE_EARLY"] = "delete_early";
})(ChangeSetType = exports.ChangeSetType || (exports.ChangeSetType = {}));
